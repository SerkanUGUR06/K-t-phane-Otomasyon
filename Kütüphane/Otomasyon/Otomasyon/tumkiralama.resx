<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox2.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>